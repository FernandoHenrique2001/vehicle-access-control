// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  cpf       String    @unique
  password  String? // Opcional - apenas admins tÃªm senha
  type      String    @default("USER") // ADMIN ou USER
  createdAt DateTime  @default(now())
  vehicles  Vehicle[]
}

model Vehicle {
  id        String   @id @default(uuid())
  license   String   @unique
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  barcode   Barcode?
  entries   Entry[]
}

model Barcode {
  id        String   @id @default(uuid())
  code      String   @unique
  vehicle   Vehicle  @relation(fields: [vehicleId], references: [id])
  vehicleId String   @unique
  createdAt DateTime @default(now())
  entries   Entry[]
}

model Entry {
  id        String    @id @default(uuid())
  entryTime DateTime  @default(now())
  exitTime  DateTime?
  vehicle   Vehicle   @relation(fields: [vehicleId], references: [id])
  vehicleId String
  barcode   Barcode   @relation(fields: [barcodeId], references: [id])
  barcodeId String
}
